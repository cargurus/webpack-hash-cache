name: DEPLOY

on:
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-11]
        node-version: [12.x, 14.x, 16.x]
        rust-toolchain: [stable]

    steps:
    - uses: actions/checkout@v2
    - name: Use Rust ${{ matrix.rust-toolchain }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: install
      run: yarn install
    - name: upload binary
      run: yarn run upload-binary
      env:
        NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: install mac arm toolchain
      if: ${{ matrix.os == 'macos-11'}}
      run: rustup target add aarch64-apple-darwin
    - run: xcodebuild -showsdks

    # Remove Xcode Command Line Tools so old version can not be used in build via https://github.com/prisma/prisma/issues/5245#issuecomment-864356168
    - run: sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;

    # Activate newest available Xcode
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    # Build with fancy params via https://github.com/shepmaster/rust/blob/silicon/silicon/README.md
    - run: |
        SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)
        MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)
      
    - name: upload mac arm binary
      if: ${{ matrix.os == 'macos-11'}}
      run: CARGO_BUILD_TARGET=aarch64-apple-darwin yarn run upload-binary
      env:
        NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
